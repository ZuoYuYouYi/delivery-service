<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

  <contextName>logback-setter</contextName>

<!--  &lt;!&ndash; 定义日志的根目录 &ndash;&gt;-->
  <property name="LOG_HOME" value="logs"/>
<!--  &lt;!&ndash; 定义日志文件名称 &ndash;&gt;-->
  <property name="appName" value="delivery"/>

  <!--输出到控制台 ConsoleAppender-->
  <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
    <!--展示格式 layout-->
    <layout class="ch.qos.logback.classic.PatternLayout">
      <pattern>
        <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
      </pattern>
    </layout>
    <!--
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
         <level>ERROR</level>
    </filter>
     -->
  </appender>

  <!-- 滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件 -->
  <appender name="fileLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- 指定日志文件的名称 -->
    <file>${LOG_HOME}/${appName}.log</file>
    <!--
    当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名
    TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动。
    -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!--
      滚动时产生的文件的存放位置及文件名称 %d{yyyy-MM-dd}：按天进行日志滚动
      %i：当文件大小超过maxFileSize时，按照i进行文件滚动
      -->
      <fileNamePattern>${LOG_HOME}/${appName}-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
      <!--
      可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件。假设设置每天滚动，
      且maxHistory是365，则只保存最近365天的文件，删除之前的旧文件。注意，删除旧文件是，
      那些为了归档而创建的目录也会被删除。
      -->
      <MaxHistory>365</MaxHistory>
      <!--
      当日志文件超过maxFileSize指定的大小时，根据上面提到的%i进行日志文件滚动
      注意此处配置SizeBasedTriggeringPolicy是无法实现按文件大小进行滚动的，必须配置timeBasedFileNamingAndTriggeringPolicy
      -->
      <timeBasedFileNamingAndTriggeringPolicy
        class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <maxFileSize>100MB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>
    <!-- 日志输出格式： -->
    <encoder>
      <charset>UTF-8</charset>
      <pattern>%d [%thread] %-5level %logger{36} %line - %msg%n</pattern>
    </encoder>
  </appender>

  <logger name="org.zuoyu.dao" level="debug" additivity="false">
    <appender-ref ref="consoleLog"/>
  </logger>

  <!--指定最基础的日志输出级别-->
  <springProfile name="dev">
    <root level="INFO">
      <appender-ref ref="consoleLog"/>
    </root>
  </springProfile>


  <springProfile name="prod">
    <root level="INFO">
      <appender-ref ref="fileLog"/>
    </root>
  </springProfile>
</configuration>